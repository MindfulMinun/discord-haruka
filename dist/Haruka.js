// Generated by CoffeeScript 2.3.1
(function() {
  //! ========================================
  //! Creating Haruka
  var Enmap, Haruka, HarukaFns, file, fnObj, fs, h, i, len;

  Haruka = {};

  Haruka.dev = true;

  Haruka.functions = [];

  Haruka.prefix = Haruka.dev ? '#h' : '-h';

  //! ========================================
  //! Modules
  fs = require('fs');

  Enmap = require('enmap');

  h = require('enmap-sqlite');

  //! ========================================
  //! Enmap
  // provider = new EnmapSQLite({ name: 'settings' })
  // Haruka.settings = new Enmap({
  //     provider: new EnmapSQLite({
  //         name: 'settings'
  //     })
  // })
  Haruka.defaultSettings = {
    modRole: "Moderator",
    adminRole: "Admin",
    welcomeChannel: "welcome",
    getWelcomeMessage: function(member) {
      return [
        `Welcome to the server, ${member}!`,
        // "サーバへようこそ, #{member}さま！"
        `Behold! ${member} has arrived!`,
        `A wild ${member} appeared!`,
        `The man, the myth, the legend, ${member}!`,
        `${member} joined the party.`
      ].choose();
    }
  };

  //! ========================================
  //! Helper functions
  Array.prototype.choose = function() {
    return this[Math.floor(Math.random() * this.length)];
  };

  Haruka.addFunction = function(fnObj) {
    return Haruka.functions.push(fnObj);
  };

  //! ========================================
  //! Take Haruka's functions and add them to the queue
  HarukaFns = fs.readdirSync('./dist/functions').filter(function(file) {
    return file.endsWith('.js');
  });

  for (i = 0, len = HarukaFns.length; i < len; i++) {
    file = HarukaFns[i];
    fnObj = require(`../dist/functions/${file}`);
    Haruka.addFunction(fnObj);
  }

  Haruka.try = function(msg) {
    var args, fn, hasRun, j, len1, ref, regexMatch, txt;
    txt = msg.content;
    hasRun = false;
    //! Check if the message starts with the prefix,
    //! and it's not from another bot.
    if (!txt.startsWith(Haruka.prefix) || msg.author.bot) {
      return;
    }
    args = txt.slice(Haruka.prefix.length).replace(/^\s+/g, '');
    ref = Haruka.functions;
    //! Run through all the commands and see if one matches.
    for (j = 0, len1 = ref.length; j < len1; j++) {
      fn = ref[j];
      if (hasRun === false) {
        regexMatch = fn.regex.exec(args);
        if (regexMatch) {
          hasRun = true;
          fn.handler(msg, regexMatch, Haruka);
        }
      }
    }
    //! Catchall
    if (!hasRun) {
      return msg.reply(["Hmm, I'm not sure what you mean by that.", "Sorry, I don't know what you meant by that.", "I’m not sure I understand.", "I’m not sure what you mean."].choose() + " Try `-h help` for a list of commands.");
    }
  };

  Haruka.greet = function(channelName, member) {
    var channel;
    //! Send the message to a designated channel on a server
    channel = member.guild.channels.find('name', channelName);
    if (!channel) {
      return;
    }
    return channel.send([
      `Welcome to the server, ${member}!`,
      // "サーバへようこそ, #{member}さま！"
      `Behold! ${member} has arrived!`,
      `A wild ${member} appeared!`,
      `The man, the myth, the legend, ${member}!`,
      `${member} joined the party.`
    ].choose());
  };

  module.exports = Haruka;

}).call(this);
