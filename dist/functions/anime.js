// Generated by CoffeeScript 2.3.1
//! ========================================
//! Anime
var Discord, asyncReq, handler, query, request, url;

Discord = require('discord.js');

request = require('request');

asyncReq = function(options) {
  return new Promise(function(resolve, reject) {
    return request(options, function(err, response, body) {
      var ref, ref1;
      // coffeelint: disable=max_line_length
      if (!err && ((200 <= (ref = response.statusCode) && ref < 400)) && !((ref1 = JSON.parse(body)) != null ? ref1.errors : void 0)) {
        // coffeelint: enable=max_line_length
        return resolve(JSON.parse(body));
      }
      return reject(err, body);
    });
  });
};

query = 'query ($search: String) {\n    Media(search: $search, type: ANIME) {\n        title {\n            english\n            romaji\n            native\n        }\n        description(asHtml: false)\n        siteUrl\n        episodes\n        duration\n        genres\n        coverImage {\n            large\n        }\n        bannerImage\n    }\n}';

url = 'https://graphql.anilist.co';

handler = function(msg, match, Haruka) {
  var animeRequest, options;
  animeRequest = match.input.tokenize()[1];
  if (!animeRequest) {
    return msg.reply(["Use `-h anime` followed by an anime to search for that anime.", "I can’t read your mind, tell me what anime you’re looking for."].choose());
  }
  options = {
    url: url,
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json'
    },
    body: JSON.stringify({
      query: query,
      variables: {
        search: animeRequest
      }
    })
  };
  return asyncReq(options).then(function(results) {
    var a, desc, embed, ref, ref1, ref2;
    a = results.data.Media;
    desc = (function() {
      var temp;
      temp = a.description.split(' ').slice(0, 50).join(' ');
      if (temp === a.description) {
        return temp.replace(/<[^>]*>/g, '');
      } else {
        return temp.replace(/<[^>]*>/g, '') + '...';
      }
    })();
    embed = new Discord.RichEmbed().setColor('#448aff').setTitle((ref = (ref1 = a.title.romaji) != null ? ref1 : a.title.english) != null ? ref : a.title.native).setURL(a.siteUrl).setDescription(desc).setThumbnail(a.coverImage.large).setFooter("Powered by the AniList API");
    if (a.duration != null) {
      embed.addField("Duration", `${a.duration} min`, true);
    }
    if (((ref2 = a.genres) != null ? ref2.length : void 0) > 0) {
      embed.addField("Genres", a.genres.join(', '), true);
    }
    return msg.channel.send(`Results for “${animeRequest}”`, embed);
  }).catch(function(err, body) {
    console.log(...arguments);
    if (!body) {
      msg.channel.send(["Hmm, I couldn’t find that anime. Did you spell it right?"]);
    }
    if (body.errors) {
      return msg.channel.send(`A server error occurred, it's not my fault this time :D\n\n\`\`\`json\n${JSON.stringify(body.errors)}\n\`\`\``);
    }
  });
};

module.exports = {
  name: "Anime",
  regex: /^(anime|animu|japanime)(\s+|$)/i,
  handler: handler,
  help: {
    short: "-h anime <...> :: Retrieves info regarding some anime.",
    long: "```asciidoc\n=== Help for Anime ===\n*Aliases*: anime, animu, japanime\n-h anime <query> :: Searches for an anime provided a search term.\n```"
  }
};
