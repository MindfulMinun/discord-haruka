// Generated by CoffeeScript 2.5.1
//! ========================================
//! WolframAlpha
var Embed, generatePlainOrTable, handler, path, r, tableToAscii;

r = require(`${__dirname}/../helpers/fetch`);

tableToAscii = require(`${__dirname}/../helpers/tableToAscii`);

Embed = (require('discord.js')).RichEmbed;

path = ["http://api.wolframalpha.com/v1/query?", `appid=${process.env.WA_APPID}`, "&output=json", "&input="].join('');

generatePlainOrTable = function(x) {
  var ref, tbl;
  if (((ref = x.img) != null ? ref.type : void 0) === "Grid") {
    tbl = tableToAscii(x.img.alt.split('\n').map(function(l) {
      return l.split(/\s*\|\s*/g);
    }));
    return `\`\`\`
${tbl}
\`\`\``;
  }
  if (x.plaintext) {
    return x.plaintext;
  }
};

handler = function(msg, match, Haruka) {
  var args;
  args = match.input.tokenize()[1];
  if (!args) {
    return msg.reply(["Please enter a search term.", "What would you like to know about?"].choose());
  }
  return msg.reply(`Searching for “${args}”...`, {
    disableEveryone: true
  }).then(function(reply) {
    return r(path + encodeURIComponent(args)).then(function(json) {
      var embed, i, input, len, pod, ref, result, textPods;
      result = json.queryresult;
      if ((!result) || (result.success === false)) {
        return msg.reply(["An error occurred while processing the input."].choose());
      }
      embed = new Embed();
      embed.setFooter("Powered by WolframAlpha");
      embed.setURL(`https://www.wolframalpha.com/input/?i=${encodeURIComponent(args)}`);
      embed.setTitle(`Results for “${args}”`);
      if (/^Input/.test(result.pods[0].title)) {
        input = result.pods.shift();
        embed.setTitle(input.title);
        textPods = input.subpods.filter(function(x) {
          return x.plaintext.trim().length;
        });
        if (textPods.length) {
          embed.setDescription(textPods.map(function(x) {
            return generatePlainOrTable(x);
          }).join('\n'));
        }
      }
      ref = result.pods;
      for (i = 0, len = ref.length; i < len; i++) {
        pod = ref[i];
        textPods = pod.subpods.map(function(x) {
          return generatePlainOrTable(x);
        }).filter(function(x) {
          return x != null;
        });
        if (textPods.length) {
          embed.addField(pod.title, textPods.join('\n\n'));
        }
      }
      reply.delete().catch(console.log);
      return msg.reply(`Results for “${args}”:`, embed);
    });
  }).catch(function(err) {
    console.log(err);
    return msg.reply(["An error occurred. Whoops.", "Something happened while processing the input."].choose());
  });
};

module.exports = {
  name: "WolframAlpha",
  regex: /^(wa|wolfram|wolframalpha)(\s+|$)/i,
  handler: handler,
  help: {
    short: "-h wa <query>  :: Ask anything with WolframAlpha.",
    long: `\`\`\`asciidoc
=== Help for WolframAlpha ===
*Aliases*: wa, wolfram, wolframalpha
-h wa <query> :: Computes stuff with WolframAlpha
\`\`\``
  }
};
