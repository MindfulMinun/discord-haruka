// Generated by CoffeeScript 2.3.1
(function() {
  //! ========================================
  //! Play
  // FIXME: Make code more readable / easier to understand.
  /**
   * Queue will look something like this:
   * Queue = {
   *     "guildId": {
   *         playing: Boolean
   *         queue: [url, url, url, ...]
   *     }
   * }
   */
  var AddToQueue, Discord, PlayNextInQueue, Queue, handler, ytdl;

  Discord = require("discord.js");

  ytdl = require("ytdl-core");

  Queue = {};

  PlayNextInQueue = function(msg) {
    var name, q, ref, url, vc;
    q = Queue[name = msg.guild.id] || (Queue[name] = {
      playing: false,
      queue: []
    });
    url = q.queue.shift();
    vc = (ref = msg.member) != null ? ref.voiceChannel : void 0;
    if (!url) {
      return false;
    }
    if (!q.playing) {
      return vc.join().then(function(connection) {
        var dispatcher, stream;
        ytdl.getInfo(url).then(function(info) {
          return msg.channel.send(`Now playing: **${info.title}** (${info.length_seconds}sec)`);
        });
        //! Play stream
        stream = ytdl(url, {
          filter: 'audioonly'
        });
        dispatcher = connection.playStream(stream);
        q.playing = true;
        return dispatcher.on('end', function() {
          q.playing = false;
          vc.leave();
          return PlayNextInQueue(msg) || msg.channel.send("Ended.");
        });
      }).catch(function(err) {
        console.log(err);
        vc.leave();
        return msg.channel.send(["An unexpected error occurred. Darn.", "Oof, an error occurred."].choose());
      });
    } else {
      return false;
    }
  };

  AddToQueue = function(url, msg) {
    var name, q;
    q = Queue[name = msg.guild.id] || (Queue[name] = {
      playing: false,
      queue: []
    });
    q.queue.push(url);
    ytdl.getInfo(url).then(function(info) {
      return msg.channel.send(`Added to queue: **${info.title}** (${info.length_seconds}sec)`);
    }).catch(function(err) {
      return msg.channel.send("An error occurred while adding video to queue. Did you enter a YouTube video or ID?");
    });
    if (!q.playing) {
      return PlayNextInQueue(msg);
    }
  };

  handler = function(msg, match, Haruka) {
    var ref, ref1, url, vc;
    vc = (ref = msg.member) != null ? ref.voiceChannel : void 0;
    url = (ref1 = msg.content.tokenize()[1]) != null ? ref1.tokenize()[1] : void 0;
    if (!vc) {
      return msg.reply(["Please join a voice channel first.", "Join a voice channel before running this command."].choose());
    }
    if (!url) {
      return msg.reply(["Please specify a YouTube video URL or ID."].choose());
    }
    return AddToQueue(url, msg, vc);
  };

  module.exports = {
    name: "Play",
    regex: /^(play|yt|youtube)(\s+|$)/i,
    handler: handler,
    help: {
      short: "-h play <...>  :: Plays a YouTube video in a voice channel.",
      long: "```asciidoc\n=== Help for Play ===\n*Aliases*: play, yt, youtube\n-h play <URL or Video ID> :: Plays a given YouTube video in a voice channel.\n```"
    }
  };

}).call(this);
