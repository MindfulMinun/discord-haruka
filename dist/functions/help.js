// Generated by CoffeeScript 2.3.1
(function() {
  //! ========================================
  //! Help
  var handler;

  handler = function(msg, match, H) {
    var allHelpList, fn, helpMatch, helpforCommand, i, len, ref;
    helpforCommand = match.input.tokenize()[1];
    if (helpforCommand) {
      ref = H.functions;
      for (i = 0, len = ref.length; i < len; i++) {
        fn = ref[i];
        helpMatch = fn.regex.test(helpforCommand);
        if (helpMatch) {
          return msg.channel.send(fn.help.long);
        }
      }
    }
    allHelpList = `Hereâ€™s a list of all my commands. Arguments in \`<angle brackets>\` are required, and those in \`[regular brackets]\` are optional.\nFor help for a specific command, use \`-h help <command>\`.\n\`\`\`asciidoc\n=== Commands ===\n${((function() {
      var j, len1, ref1, results;
      ref1 = H.functions;
      results = [];
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        fn = ref1[j];
        results.push(fn.help);
      }
      return results;
    })()).filter(function(x) {
      return !x.hidden;
    }).map(function(x) {
      return x.short;
    }).join('\n')}\n\`\`\``;
    return msg.channel.send(allHelpList);
  };

  module.exports = {
    name: "Help",
    regex: /^(help|h)(\s+|$)/i,
    handler: handler,
    help: {
      short: "-h help [...]  :: This list. What did you expect?",
      long: "```asciidoc\n=== Help for Help (so meta) ===\n*Aliases*: help, h\n-h help :: Returns a help menu listing all the commands.\n-h help [command] :: Returns a help menu for that specific command.\n```"
    }
  };

}).call(this);
