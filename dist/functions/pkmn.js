// Generated by CoffeeScript 2.3.1
(function() {
  //! ========================================
  //! Pokémon
  var Discord, capitalize, fetch, handler, toDexNumber;

  Discord = require('discord.js');

  //! Helper Functions
  //! Fetch
  fetch = function(url) {
    return new Promise(function(resolve, reject) {
      var client, http, https;
      http = require('http');
      https = require('https');
      client = http;
      if (url.toString().indexOf("https") === 0) {
        client = https;
      }
      return client.get(url, function(r) {
        var data;
        data = '';
        //! A chunk of data has been recieved
        r.on('data', function(chunk) {
          return data += chunk;
        });
        //! Whole response recieved, return result
        return r.on('end', function() {
          return resolve(data);
        });
      }).on('error', function(err) {
        return reject(err);
      });
    });
  };

  //! Capitalize
  capitalize = function(txt) {
    return txt.charAt(0).toUpperCase() + txt.substr(1);
  };

  //! ToDexNumber
  toDexNumber = function(n) {
    return '#' + n.toString().padStart(3, '0');
  };

  //! ========================================
  //! Message handler
  handler = async function(msg, match) {
    var P, PKMN_URL, SPECIES_URL, embed, err, pkmn, species;
    //! Define a few constants
    SPECIES_URL = "https://pokeapi.co/api/v2/pokemon-species/";
    PKMN_URL = "https://pokeapi.co/api/v2/pokemon/";
    species = null;
    pkmn = null;
    P = {};
    try {
      if (!match.last()) {
        return msg.reply(["Use `-h pkmn` followed by the Pokémon you want me to look up.", "I can look for Pokémon in my Pokédex if you use `-h pkmn ` followed by a Pokémon's name or National Dex number.", "You’re missing a few arguments. Try `-h help pkmn` if you forgot this command’s syntax."].choose());
      }
      species = JSON.parse((await fetch(SPECIES_URL + match.last().toLowerCase() + "/")));
      //! Postpone JSON.parse pkmn until it's needed
      pkmn = fetch(PKMN_URL + species.id + "/");
      //! Break if Pokémon not found.
      if (species.detail === "Not found.") {
        return msg.reply(["My database is telling me that that Pokémon doesn’t exist?", "Error 404: Pokémon Not Found", "I couldn’t find that Pokémon in my Pokédex. Try asking a Professor instead?"].choose());
      }
      P.name = (function() {
        var i, len, name, ref;
        ref = species.names;
        for (i = 0, len = ref.length; i < len; i++) {
          name = ref[i];
          if (name.language.name === "en") {
            return name.name;
          }
        }
      })();
      P.dexNumber = toDexNumber(species.id);
      //! Let the user know we're loading stuff
      msg.reply([`Information about ${P.name}, coming right up!`, `Looking through my Pokédex for ${P.name}...`, `Looking up ${P.name}, hold tight...`, `Getting info on ${P.name}...`, `Looking up ${P.name}’s favorite berries...`].choose());
      P.description = (function() {
        var f, i, len, ref;
        ref = species.flavor_text_entries;
        for (i = 0, len = ref.length; i < len; i++) {
          f = ref[i];
          if (f.language.name === "en") {
            return f.flavor_text.replace(/\n/g, ' ');
          }
        }
      })();
      P.category = (function() {
        var genus, i, len, ref;
        ref = species.genera;
        for (i = 0, len = ref.length; i < len; i++) {
          genus = ref[i];
          if (genus.language.name === "en") {
            return genus.genus;
          }
        }
      })();
      //! Postpone JSON.parse pkmn until it's needed
      pkmn = JSON.parse((await pkmn));
      P.types = pkmn.types.map(function(t) {
        return capitalize(t.type.name);
      });
      //! Create the embed object
      embed = new Discord.RichEmbed().setColor('#448aff').setURL(`https://www.smogon.com/dex/sm/pokemon/${(P.name === "Meowstic" ? "meowstic-m" : species.name)}/`).setThumbnail(pkmn.sprites.front_default).setTitle(`${capitalize(P.name)} — ${P.dexNumber}`).setDescription(P.description).addField("National Dex \#", P.dexNumber, true).addField("Typing", P.types.join("/"), true).addField("Category", P.category, true);
      return msg.channel.send(embed);
    } catch (error) {
      err = error;
      console.log("========================================");
      console.log(err);
      console.log({
        species: species,
        pkmn: pkmn,
        P: P
      });
      return msg.reply(["Uhh, an error occurred. Did you type everything in properly?", "An error occurred, make sure you're using the right command.", "Something happened, an error occurred. Check your command and try again."].choose());
    }
  };

  module.exports = {
    name: "Pokémon",
    regex: /^(?:(?:poke(?:mon)?)|(?:pkmn))\s*(\S[\s\S]*)?/i,
    handler: handler,
    //! coffeelint: disable=max_line_length
    help: "```asciidoc\n=== Help for Pokémon ===\n*Aliases*: pkmn, pokemon, poke\n-h pkmn <nameOrId> :: Given a Pokémon’s name or National Pokédex Number,\n                      this command returns information on a specific Pokémon.\n```" //! coffeelint: enable=max_line_length
  };

}).call(this);
