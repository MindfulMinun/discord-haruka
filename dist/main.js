// Generated by CoffeeScript 2.3.1
(function() {
  //! ========================================
  //! Haruka Setup
  var Discord, Haruka, client, config, fs;

  fs = require('fs');

  Discord = require('discord.js');

  config = require('../config.json');

  Haruka = require('./Haruka.js');

  client = new Discord.Client;

  Haruka.config = config;

  //! ========================================
  //! Add event listeners
  client.on('ready', function() {
    var d;
    d = new Date;
    client.user.setActivity('Try -h help');
    if (Haruka.dev) {
      return console.log(`Started Haruka in DEVELOPMENT mode.\nLogged in as ${client.user.tag} on ${d.toUTCString()}.`);
    } else {
      return console.log(`Logged in as ${client.user.tag} on ${d.toUTCString()}.`);
    }
  });

  client.on('message', function(msg) {
    return Haruka.try(msg);
  });

  // client.on 'guildCreate', (guild) ->
  //     #! Adding a new row to the collection uses `set(key, value)`
  //     Haruka.settings.set guild.id, Haruka.defaultSettings

  // client.on 'guildDelete', (guild) ->
  //     #! Removing an element uses `delete(key)`
  //     Haruka.settings.delete guild.id

  // client.on 'guildMemberAdd', (member) ->
  //     #! This executes when a member joins, so let's welcome them!
  //     #! Get a welcome message using `getProp`
  //     message = Haruka.settings.getProp(member.guild.id, getWelcomeMessage)()

  //     #! Send message to the welcome channel
  //     member.guild.channels
  //         .find "name", Haruka.settings.getProp(member.guild.id, "welcomeChannel")
  //         .send welcomeMessage
  //         .catch console.error

  //! Catch Uncaught rejections and continue normally.
  process.on('unhandledRejection', function(err) {
    return console.log("===== Uncaught Promise Rejection: =====\n", err);
  });

  //! ========================================
  //! Helpers
  Array.prototype.choose = function() {
    return this[Math.floor(Math.random() * this.length)];
  };

  Array.prototype.last = function() {
    return this[this.length - 1];
  };

  //! ========================================
  //! Finally, log Haruka in.
  client.login(Haruka.config.token);

}).call(this);
